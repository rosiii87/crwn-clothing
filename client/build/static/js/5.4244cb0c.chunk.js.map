{"version":3,"sources":["pages/collection/collection.styles.jsx","pages/collection/collection.component.jsx","pages/collection/collection.container.jsx","redux/shop/shop.selectors.js","components/with-spinner/with-spinner.component.jsx","components/collection-item/collection-item.styles.jsx","components/collection-item/collection-item.component.jsx"],"names":["CollectionPageContainer","styled","div","_templateObject","CollectionTitle","h2","_templateObject2","CollectionItemsContainer","_templateObject3","connect","state","ownProps","collection","selectCollection","match","params","collectionId","_ref","title","items","react_default","a","createElement","map","item","collection_item_component","key","id","mapStateToProps","createStructuredSelector","isLoading","selectIsCollectionsLoaded","compose","WithSpinner","CollectionPage","__webpack_require__","d","__webpack_exports__","selectCollectionsForPreview","selectIsCollectionFetching","reselect__WEBPACK_IMPORTED_MODULE_0__","selectShop","shop","selectCollections","createSelector","collections","Object","keys","collectionUrlParam","isFetching","WrappedComponent","otherProps","C_Users_michal_rosa_Documents_Coding_Learning_react_crwn_clothing_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","_spinner_spinner_component__WEBPACK_IMPORTED_MODULE_2__","CollectionItemContainer","AddButton","CustomButton","BackgroundImage","imageUrl","concat","CollectionFooterContainer","_templateObject4","NameContainer","span","_templateObject5","PriceContainer","_templateObject6","dispatch","addItem","name","price","className","onClick","inverted"],"mappings":"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","file":"static/js/5.4244cb0c.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const CollectionPageContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  @media screen and (max-width: 800px) {\n    align-items: center;\n  }\n`;\n\nexport const CollectionTitle = styled.h2`\n  font-size: 38px;\n  margin: 0 auto 30px;\n`;\n\nexport const CollectionItemsContainer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr 1fr;\n  grid-gap: 10px;\n\n  & > div {\n    margin-bottom: 30px;\n  }\n\n  @media screen and (max-width: 800px) {\n    max-width: unset;\n    margin: unset;\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-gap: 15px;\n  }\n`;\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport CollectionItem from '../../components/collection-item/collection-item.component';\n\nimport { selectCollection } from '../../redux/shop/shop.selectors';\n\nimport {\n  CollectionPageContainer,\n  CollectionTitle,\n  CollectionItemsContainer\n} from './collection.styles';\n\nconst CollectionPage = ({ collection }) => {\n  const { title, items } = collection;\n  return (\n    <CollectionPageContainer>\n      <CollectionTitle>{title}</CollectionTitle>\n      <CollectionItemsContainer>\n        {items.map(item => (\n          <CollectionItem key={item.id} item={item} />\n        ))}\n      </CollectionItemsContainer>\n    </CollectionPageContainer>\n  );\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n  collection: selectCollection(ownProps.match.params.collectionId)(state)\n});\n\nexport default connect(mapStateToProps)(CollectionPage);\n","import { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { createStructuredSelector } from 'reselect';\n\nimport { selectIsCollectionsLoaded } from '../../redux/shop/shop.selectors';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nimport CollectionPage from './collection.component';\n\nconst mapStateToProps = createStructuredSelector({\n  isLoading: state => !selectIsCollectionsLoaded(state)\n});\n\nconst CollectionPageContainer = compose(\n  connect(mapStateToProps),\n  WithSpinner\n)(CollectionPage);\n\nexport default CollectionPageContainer;\n","import { createSelector } from 'reselect';\n\nconst selectShop = state => state.shop;\n\nexport const selectCollections = createSelector(\n  [selectShop],\n  shop => shop.collections\n);\n\nexport const selectCollectionsForPreview = createSelector(\n  [selectCollections],\n  collections =>\n    collections ? Object.keys(collections).map(key => collections[key]) : []\n);\n\nexport const selectCollection = collectionUrlParam =>\n  createSelector(\n    [selectCollections],\n    collections => (collections ? collections[collectionUrlParam] : null)\n  );\n\nexport const selectIsCollectionFetching = createSelector(\n  [selectShop],\n  shop => shop.isFetching\n);\n\nexport const selectIsCollectionsLoaded = createSelector(\n  [selectShop],\n  shop => !!shop.collections\n);\n","import React from 'react';\n\nimport Spinner from '../spinner/spinner.component';\n\nconst WithSpinner = WrappedComponent => ({ isLoading, ...otherProps }) => {\n  return isLoading ? <Spinner /> : <WrappedComponent {...otherProps} />;\n};\n\nexport default WithSpinner;\n","import styled from 'styled-components';\nimport CustomButton from '../custom-button/custom-button.component';\n\nexport const CollectionItemContainer = styled.div`\n  width: 22vw;\n  display: flex;\n  flex-direction: column;\n  height: 350px;\n  align-items: center;\n  position: relative;\n  padding: 0 10px;\n\n  &:hover {\n    .image {\n      opacity: 0.8;\n    }\n\n    button {\n      opacity: 0.85;\n      display: flex;\n    }\n  }\n\n  @media screen and (max-width: 800px) {\n    width: 40vw;\n    padding: unset;\n\n    &:hover {\n      .image {\n        opacity: unset;\n      }\n\n      button {\n        opacity: unset;\n      }\n    }\n  }\n`;\n\nexport const AddButton = styled(CustomButton)`\n  width: 80%;\n  opacity: 0.7;\n  position: absolute;\n  top: 255px;\n  display: none;\n\n  @media screen and (max-width: 800px) {\n    display: block;\n    opacity: 0.9;\n    min-width: unset;\n    padding: 0 10px;\n  }\n`;\n\nexport const BackgroundImage = styled.div`\n  width: 100%;\n  height: 95%;\n  background-size: cover;\n  background-position: center;\n  margin-bottom: 5px;\n  background-image: ${({ imageUrl }) => `url(${imageUrl})`};\n`;\n\nexport const CollectionFooterContainer = styled.div`\n  width: 100%;\n  height: 5%;\n  display: flex;\n  justify-content: space-between;\n  font-size: 18px;\n`;\n\nexport const NameContainer = styled.span`\n  width: 90%;\n  margin-bottom: 15px;\n`;\n\nexport const PriceContainer = styled.span`\n  width: 10%;\n  text-align: right;\n`;\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { addItem } from '../../redux/cart/cart.actions';\n\nimport {\n  CollectionItemContainer,\n  CollectionFooterContainer,\n  AddButton,\n  BackgroundImage,\n  NameContainer,\n  PriceContainer\n} from './collection-item.styles';\n\nconst CollectionItem = ({ item, addItem }) => {\n  const { name, price, imageUrl } = item;\n\n  return (\n    <CollectionItemContainer>\n      <BackgroundImage className=\"image\" imageUrl={imageUrl} />\n      <CollectionFooterContainer>\n        <NameContainer>{name}</NameContainer>\n        <PriceContainer>{price}</PriceContainer>\n      </CollectionFooterContainer>\n      <AddButton onClick={() => addItem(item)} inverted>\n        Add to cart\n      </AddButton>\n    </CollectionItemContainer>\n  );\n};\n\nconst mapDispatchToProps = dispatch => ({\n  addItem: item => dispatch(addItem(item))\n});\n\nexport default connect(null, mapDispatchToProps)(CollectionItem);\n"],"sourceRoot":""}